name: Release Girders

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version'
        required: true
        type: string
      developmentVersion:
        description: 'Development version after release'
        required: true
        type: string
      publishTo:
        description: 'Publish to'
        required: true
        default: 'MavenCentral'
        type: choice
        options:
          - 'MavenCentral'
          - 'none (dry run)'

env:
  RELEASE_VERSION: ${{ inputs.releaseVersion }}
  DEVELOPMENT_VERSION: ${{ inputs.developmentVersion }}
  PUBLISH_TO: ${{ inputs.publishTo }}

jobs:
  log-the-inputs:
    name: log the input params
    runs-on: ubuntu-latest
    steps:
      - name: log the input params
        run: |
          echo "Release version: $RELEASE_VERSION"
          echo "Development version: $DEVELOPMENT_VERSION"
          echo "Publish to: $PUBLISH_TO"

  build_release:
    name: build girders release
    runs-on: ubuntu-latest
    env:
      MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
      GPG_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
      GIT_USER: ${{ secrets.GITHUB_ACTOR }}
      GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11.0.11'
          distribution: 'zulu'
          cache: 'maven'
          overwrite-settings: false
          #server-id: 'ossrh' # Value of the distributionManagement/repository/id field of the pom.xml
          #server-username: MAVEN_USERNAME # same name as below env variable
          #server-password: MAVEN_PASSWORD # same name as below env variable
          #gpg-private-key: ${{ secrets.PGP_PRIVATE_KEY }}
          #gpg-passphrase: GPG_PASSPHRASE # same name as below env variable
      - name: Create settings.xml
        run: |
          cat <<EOF > $HOME/.m2/settings.xml
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
           <servers>          
             <server>
              <id>ossrh</id>
              <username>${env.MAVEN_USERNAME}</username>
              <password>${env.MAVEN_PASSWORD}</password>          
             </server>
             <server>
              <id>gpg.passphrase</id>
              <passphrase>${env.GPG_PASSPHRASE}</passphrase>
             </server>
             <server>
              <id>github</id>
              <username>${env.GIT_USER}</username>
              <password>${env.GIT_PASSWORD}</password>
             </server>
           </servers>
          </settings>

      - name: Configure git user
        run: |
          git config user.email "girders@netcetera.com"
          git config user.name "Github Actions Bot"
      - name: Maven clean
        run: mvn --batch-mode clean release:clean
        shell: bash
      - name: Print settings.xml
        run: |
          echo "Settings.xml: $(cat $HOME/.m2/settings.xml)"
      - name: Maven release:prepare
        run: mvn --batch-mode -DdryRun=${{ env.PUBLISH_TO == 'none (dry run)' }} -DdevelopmentVersion=$DEVELOPMENT_VERSION -DreleaseVersion=$RELEASE_VERSION release:prepare
        shell: bash
      - name: Maven release:perform
        run: mvn --batch-mode -DdryRun=${{ env.PUBLISH_TO == 'none (dry run)' }} release:perform
        shell: bash
